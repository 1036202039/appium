jobs:
  - job: bundle_and_upload_appium_zip
    strategy:
      matrix:
        Xcode10_2:
          XCODE_VERSION: 10.2
        Xcode10_1:
          XCODE_VERSION: 10.1
        Xcode10:
          XCODE_VERSION: 10
        Xcode9_4_1:
          XCODE_VERSION: 9.4.1
    pool:
      vmImage: 'macOS 10.14'
    variables:
      CC: gcc
      CXX: g++
    steps:
    - script: gcc --version
      displayName: Print GCC Version
    - script: sudo xcode-select -s /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer
      displayName: Xcode Select $(XCODE_VERSION)
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
    - script: npm ci || npm install # "npm ci" if shrinkwrap is present
      displayName: Install NPM Dependencies
    - script: |
        pushd node_modules/appium-xcuitest-driver/WebDriverAgent
        carthage bootstrap --no-use-binaries
        cp Cartfile.resolved Carthage
        mkdir -p ./Resources/WebDriverAgent.bundle
        popd
      displayName: Fully build XCUITestDriver
    - script: |
        pushd node_modules/appium-xcuitest-driver/WebDriverAgent
        echo '=== running bootstrap.sh ==='
        ./Scripts/bootstrap.sh
        echo '=== running build.sh ==='
        ./Scripts/build.sh        
        popd
      displayName: Run WebdriverAgent build scripts for Xcode $(XCODE_VERSION)
    - script: npm run build
      displayName: npm run build
    - script: npm prune --production
      displayName: Get rid of dev dependencies
    - script: cp $(which node) .
      displayName: Copy Node binary into bundle
    - script: npm run zip
      displayName: Create the bundle zip
    # TODO: Add some sanity tests here
    - script: mv appium.zip appium-xcode-$(XCODE_VERSION).zip
      displayName: Rename appium.zip to specific name
    - task: GithubRelease@0
      inputs:
        repositoryName: appium/appium
        tagSource: manual
        tag: $(Build.BuildNumber)      
        assets: |
          appium-xcode-$(XCODE_VERSION).zip
      displayName: Create GitHub Release
